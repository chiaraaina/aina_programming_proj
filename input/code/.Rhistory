#############################################################################################
###################################### ANGER PROJECT ########################################
###################################### RESPONSE TIME #######################################
#############################################################################################
# 1. calculate mean values of acceptance/default allocation
# 2. calculate pvalue for difference in means
# 3. create & save jpeg graphs
#############################################################################################
library(dplyr)
library(ggplot2)
library(haven)
library(magrittr)
library(readr)
library(ggpubr)
library(magrittr)
library(grid)
library(gridExtra)
## --- Clean workspace --- ##
rm(list = ls())
## --- Read the data --- ##
anger_df <- read.csv('output/data/cleaned_data.csv', header = TRUE)
name_treatment <- c('S1', 'S2', 'D1', 'D2')
## --- Calculate initial expectation --- ##
anger_df$expect <- NA
anger_df$expect[anger_df$player == 2 & anger_df$payoff_tr == 0 & is.na(anger_df$accept) == 0] <- (8*anger_df$belief + 2*(1- anger_df$belief)*anger_df$accept)[anger_df$player == 2 & anger_df$payoff_tr == 0 & is.na(anger_df$accept) == 0]
anger_df$expect[anger_df$player == 2 & anger_df$payoff_tr == 1 & is.na(anger_df$accept) == 0] <- (11*anger_df$belief + 2*(1- anger_df$belief)*anger_df$accept)[anger_df$player == 2 & anger_df$payoff_tr == 1 & is.na(anger_df$accept) == 0]
anger_df$frust[anger_df$player == 2 & anger_df$expect <2 & is.na(anger_df$accept) == 0] <- 0
anger_df$frust[anger_df$player == 2 & anger_df$expect >=2 & is.na(anger_df$accept) == 0] <- (anger_df$expect - 2)[anger_df$player == 2 & anger_df$expect >=2 & is.na(anger_df$accept) == 0]
## --- Graphs --- ##
# Eclude outliers - 5 sd far from the mean
outlier_min_b <- mean(anger_df$sec_accept, na.rm = TRUE)+ sd(anger_df$sec_accept, na.rm = TRUE)*5
sum(anger_df$sec_accept > outlier_min_b & is.na(anger_df$sec_accept) == 0)
outlier_min_a <- mean(anger_df$sec_offer, na.rm = TRUE) + sd(anger_df$sec_offer, na.rm = TRUE)*5
sum(anger_df$sec_offer > outlier_min_a & is.na(anger_df$sec_offer) == 0)
# Bymethod of play: red Direct, blu Strategy (blue accept, black reject)
# Frustration
d_accept <- ggplot(data=subset(anger_df, direct==1 & sec_accept <outlier_min_b) , mapping=aes(x=frust, y=sec_accept)) + geom_point(aes(colour = accept))  +
guides(color=FALSE)  + labs(x = 'Frustration',   y = 'RT (sec)') +
geom_smooth( inherit.aes = TRUE, method='lm',col = "red") + stat_cor(method = 'pearson')
dm_accept <- ggplot(data=subset(anger_df, direct==1 & sec_accept <outlier_min_b & gender == 0) , mapping=aes(x=frust, y=sec_accept)) + geom_point(aes(colour = accept))  +
guides(color=FALSE)  + labs(x = 'Frustration',   y = 'Response Time') +
geom_smooth( inherit.aes = TRUE, method='lm',col = "red") + stat_cor(method = 'pearson')
df_accept <- ggplot(data=subset(anger_df, direct==1 & sec_accept <outlier_min_b & gender  == 1) , mapping=aes(x=frust, y=sec_accept)) + geom_point(aes(colour = accept))  +
guides(color=FALSE)  + labs(x = 'Frustration',   y = 'RT (sec)') +
geom_smooth( inherit.aes = TRUE, method='lm',col = "red") + stat_cor(method = 'pearson')
s_accept <- ggplot(data=subset(anger_df, direct==0 & sec_accept <outlier_min_b) , mapping=aes(x=frust, y=sec_accept)) + geom_point(aes(colour = accept))  +
guides(color=FALSE)  + labs(x = 'Frustration',   y = 'RT (sec)') +
geom_smooth( inherit.aes = TRUE, method='lm',col = "blue") + stat_cor(method = 'pearson')
sm_accept <- ggplot(data=subset(anger_df, direct==0 & sec_accept <outlier_min_b & gender == 0) , mapping=aes(x=frust, y=sec_accept)) + geom_point(aes(colour = accept))  +
guides(color=FALSE)  + labs(x = 'Frustration',   y = 'RT (sec)') +
geom_smooth( inherit.aes = TRUE, method='lm',col = "blue") + stat_cor(method = 'pearson')
sf_accept <- ggplot(data=subset(anger_df, direct==0 & sec_accept <outlier_min_b & gender  == 1) , mapping=aes(x=frust, y=sec_accept)) + geom_point(aes(colour = accept))  +
guides(color=FALSE)  + labs(x = 'Frustration',   y = 'RT (sec)') +
geom_smooth( inherit.aes = TRUE, method='lm',col = "blue") + stat_cor(method = 'pearson')
col_titles = c('Direct', 'Strategy')
row_titles = c('All', 'Male', 'Female')
direct <- grid.arrange(d_accept, dm_accept, df_accept,
nrow = 1, left = textGrob('Direct', rot = 90, gp = gpar(fontface = "bold", cex = 1.25)))
s <- grid.arrange(s_accept, bottom = textGrob('All', hjust = 0, gp = gpar(fontface = "bold", cex = 1.25)))
sm <- grid.arrange(sm_accept, bottom = textGrob('Male', hjust = 0, gp = gpar(fontface = "bold", cex = 1.25)))
sf <- grid.arrange(sf_accept, bottom = textGrob('Female', hjust = 0, gp = gpar(fontface = "bold", cex = 1.25)))
strategy <- grid.arrange(s, sm, sf,
nrow =1, left = textGrob('Strategy', rot = 90, gp = gpar(fontface = "bold", cex = 1.25)))
jpeg(paste('output/graphs/frustration', '.jpeg', sep=""), width = 1000, height = 1000, units = "px", pointsize = 12,
quality = 75)
grid.arrange(direct, strategy ,nrow=2,
top = textGrob('Effect of Initial Expectations', vjust = 1, gp = gpar(fontface = "bold", cex = 1.5)),
bottom = textGrob( "Blue = accept, Black = reject.", gp = gpar(fontface = 3, fontsize = 12),  hjust = 1,  x = 1))
dev.off()
# Expectation
d_accept <- ggplot(data=subset(anger_df, direct==1 & sec_accept <outlier_min_b) , mapping=aes(x=expect, y=sec_accept)) + geom_point(aes(colour = accept))  +
guides(color=FALSE)  + labs(x = 'Initial Expectations',   y = 'RT (sec)') +
geom_smooth( inherit.aes = TRUE, method='lm',col = "red") + stat_cor(method = 'pearson')
dm_accept <- ggplot(data=subset(anger_df, direct==1 & sec_accept <outlier_min_b & gender == 0) , mapping=aes(x=expect, y=sec_accept)) + geom_point(aes(colour = accept))  +
guides(color=FALSE)  + labs(x = 'Initial Expectations',   y = 'Response Time') +
geom_smooth( inherit.aes = TRUE, method='lm',col = "red") + stat_cor(method = 'pearson')
df_accept <- ggplot(data=subset(anger_df, direct==1 & sec_accept <outlier_min_b & gender  == 1) , mapping=aes(x=expect, y=sec_accept)) + geom_point(aes(colour = accept))  +
guides(color=FALSE)  + labs(x = 'Initial Expectations',   y = 'RT (sec)') +
geom_smooth( inherit.aes = TRUE, method='lm',col = "red") + stat_cor(method = 'pearson')
s_accept <- ggplot(data=subset(anger_df, direct==0 & sec_accept <outlier_min_b) , mapping=aes(x=expect, y=sec_accept)) + geom_point(aes(colour = accept))  +
guides(color=FALSE)  + labs(x = 'Initial Expectations',   y = 'RT (sec)') +
geom_smooth( inherit.aes = TRUE, method='lm',col = "blue") + stat_cor(method = 'pearson')
sm_accept <- ggplot(data=subset(anger_df, direct==0 & sec_accept <outlier_min_b & gender == 0) , mapping=aes(x=expect, y=sec_accept)) + geom_point(aes(colour = accept))  +
guides(color=FALSE)  + labs(x = 'Initial Expectations',   y = 'RT (sec)') +
geom_smooth( inherit.aes = TRUE, method='lm',col = "blue") + stat_cor(method = 'pearson')
sf_accept <- ggplot(data=subset(anger_df, direct==0 & sec_accept <outlier_min_b & gender  == 1) , mapping=aes(x=expect, y=sec_accept)) + geom_point(aes(colour = accept))  +
guides(color=FALSE)  + labs(x = 'Initial Expectations',   y = 'RT (sec)') +
geom_smooth( inherit.aes = TRUE, method='lm',col = "blue") + stat_cor(method = 'pearson')
col_titles = c('Direct', 'Strategy')
row_titles = c('All', 'Male', 'Female')
direct <- grid.arrange(d_accept, dm_accept, df_accept,
nrow = 1, left = textGrob('Direct', rot = 90, gp = gpar(fontface = "bold", cex = 1.25)))
s <- grid.arrange(s_accept, bottom = textGrob('All', hjust = 0, gp = gpar(fontface = "bold", cex = 1.25)))
sm <- grid.arrange(sm_accept, bottom = textGrob('Male', hjust = 0, gp = gpar(fontface = "bold", cex = 1.25)))
sf <- grid.arrange(sf_accept, bottom = textGrob('Female', hjust = 0, gp = gpar(fontface = "bold", cex = 1.25)))
strategy <- grid.arrange(s, sm, sf,
nrow =1, left = textGrob('Strategy', rot = 90, gp = gpar(fontface = "bold", cex = 1.25)))
jpeg(paste('output/graphs/expectations', '.jpeg', sep=""), width = 1000, height = 1000, units = "px", pointsize = 12,
quality = 75)
grid.arrange(direct, strategy ,nrow=2,
top = textGrob('Effect of Initial Expectations', vjust = 1, gp = gpar(fontface = "bold", cex = 1.5)),
bottom = textGrob( "Blue = accept, Black = reject.", gp = gpar(fontface = 3, fontsize = 12),  hjust = 1,  x = 1))
dev.off()
#########################################################################################################
## ---  B - Time Response --- ##
##########################################################################################################
sec_offer_mean <- anger_df %>% filter (player == 1) %>% group_by(direct, payoff_tr, offer) %>% summarize(m = mean(sec_offer, na.rm = TRUE))
sec_accept_mean <- anger_df %>% filter (player == 2 & is.na(accept) == FALSE ) %>% group_by(direct, payoff_tr, accept)  %>% summarize(m = mean(sec_accept, na.rm = TRUE))
sec_yes <- anger_df %>% filter(player == 2, is.na(accept)== FALSE, accept==1) %>% select(sec_accept)
sec_no <- anger_df %>% filter(player == 2, is.na(accept)== FALSE, accept==0) %>% select(sec_accept)
wilcox.test(pull(sec_yes), pull(sec_no), exact = FALSE, na.rm = TRUE)
t.test(pull(sec_yes), pull(sec_no), exact = FALSE, na.rm = TRUE)
means <-  c(mean(pull(sec_no)), mean(pull(sec_yes)))
barplot(means)
# Direct
d_sec <- anger_df %>% filter(direct ==1, player == 2, is.na(accept)== FALSE) %>% select(sec_accept)
s_sec <- anger_df %>% filter(direct ==0, player == 2, is.na(accept)== FALSE) %>% select(sec_accept)
wilcox.test(pull(d_sec), pull(s_sec), exact = FALSE, na.rm = TRUE)
t.test(pull(d_sec), pull(s_sec), exact = FALSE, na.rm = TRUE)
# Direct and treatment -- abbastanza inutile
d1_sec_yes <- anger_df %>% filter(direct ==1, player == 2, is.na(accept)== FALSE, accept==1, payoff_tr == 0) %>% select(sec_accept)
d1_sec_no <- anger_df %>% filter(direct ==1, player == 2, is.na(accept)== FALSE, accept==0, payoff_tr == 0) %>% select(sec_accept)
d2_sec_yes <- anger_df %>% filter(direct ==1, player == 2, is.na(accept)== FALSE, accept==1, payoff_tr == 1) %>% select(sec_accept)
d2_sec_no <- anger_df %>% filter(direct ==1, player == 2, is.na(accept)== FALSE, accept==0, payoff_tr == 1) %>% select(sec_accept)
wilcox.test(pull(d1_sec_no), pull(d2_sec_no), exact = FALSE, na.rm = TRUE)
t.test(pull(d2_sec_yes), pull(d2_sec_no), exact = FALSE, na.rm = TRUE)
# Strategy
s_sec_yes <- anger_df %>% filter(direct ==0, player == 2, is.na(accept)== FALSE, accept==1) %>% select(sec_accept)
s_sec_no <- anger_df %>% filter(direct ==0, player == 2, is.na(accept)== FALSE, accept==0) %>% select(sec_accept)
wilcox.test(pull(s_sec_yes), pull(s_sec_no), exact = FALSE, na.rm = TRUE)
t.test(pull(s_sec_yes), pull(s_sec_no), exact = FALSE, na.rm = TRUE)
#############################################################################################
###################################### ANGER PROJECT ########################################
###################################### RESPONSE TIME #######################################
#############################################################################################
# 1. calculate mean values of acceptance/default allocation
# 2. calculate pvalue for difference in means
# 3. create & save jpeg graphs
#############################################################################################
library(dplyr)
library(ggplot2)
library(haven)
library(magrittr)
library(readr)
library(ggpubr)
library(magrittr)
library(grid)
library(gridExtra)
## --- Clean workspace --- ##
rm(list = ls())
## --- Read the data --- ##
anger_df <- read.csv('output/data/cleaned_data.csv', header = TRUE)
name_treatment <- c('S1', 'S2', 'D1', 'D2')
